/**
 * Helper class that allows to easily retrieve data in an JSON info set
 * generated by Bronze.
 */
export default class BronzeHelper {
  private data: object;

  constructor(data: object) {
    if(typeof data !== "object") {
      throw new Error("BronzeHelper: data must be an object.");
    }

    this.data = data;
  }

  /**
   * Returns a profile info object and checks that it exists.
   */
  getProfile(name: string) {
    if(!name) name = "DEFAULT"; // Assume default profile name.
    if(this.data.hasOwnProperty(name))
      return this.data[name];
    else
      throw new Error(`BronzeHelper: profile ${name} not found.`);
  }

  /**
   * Returns an image info object and checks that it exists.
   */
  getImage(id: string, profile: string) {
    let p = this.getProfile(profile);
    if(p.images.hasOwnProperty(id))
      return p.images[id];
    else
      throw new Error(`BronzeHelper: image ${id} not found in profile ${profile}.`);
  }

  /**
   * Returns all the versions of an image in a given format.
   */
  getVersionsByFormat(id: string, format: string, profile: string) {
    let img = this.getImage(id, profile);

    let r = [];
    for(let versionId in img.versions) {
      if(img.versions[versionId].format === format) r.push(img.versions[versionId]);
    }

    return r;
  }

  /**
   * Returns all the versions of an image from a given transform.
   */
  getVersionsByTransform(id: string, transform: string, profile: string) {
    let img = this.getImage(id, profile);

    let r = [];
    for(let versionId in img.versions) {
      if(img.versions[versionId].transform === transform) r.push(img.versions[versionId]);
    }

    return r;
  }
}
